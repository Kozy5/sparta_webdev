CS 핵심 용어 / 간단 용어정리!

(CS 적 의미는 차이가 있지만 큰틀에서는 비슷한 의미로 이해할 수 있는 용어)

● 프로세스 = 프로그램을 실행해주는 주체 ex) 카카오톡을 실행함

● 쓰레드   = 작업을 처리해주는 주체     ex) 메세지 발송을 처리해줌

# CPU를 잘 사용하기 위해 프로세스를 잘 배정해야 함

● CPU는 한정된 자원으로 최대의 성능이 중요!
그렇기에 CPU를 적절하고 효율적으로 사용해야함

● ex) OS는 실행 대기중인 프로그램(프로세스)들에게 
CPU자원 배정을 적절히 하여 시스템의 성능을 끌어올릴 수 있다.
(결국 처리는 CPU!)

● 공통배정조건 : 오버헤드↓ / 사용률↑ / 기아 현상↓
    ● 오버헤드: 프로세스가 자원낭비 못하게
    ● 사용률: 프로세스가 최대한 자원 많이받아 빠른 처리
    ● 기아 현상 : 프로세스가 자원 못 받고 배고픈상태로 대기하지 않게
    
● 목표에 따른 배정조건 :
1. 배치 시스템 : 가능하면 많은 일을 수행. / 시간(time)보다 처리량(throughout)이 중요 
2. 대화형 시스템 : 빠른 응답 시간(time) / 적은 대기시간이 중요
3. 실시간 시스템 : 실시간(time)즉, 최소 응답시간(dead line)중요

● 정책에 따라 3가지로 나뉨
1. CPU이용률을 최대화
2. 오버헤드를 최소화
3. 모든프로세스가 공평하게 분배 




1. 스케쥴링(CS 면접 단골 질문)

1-1 스케쥴링 소개



1-2 출력 장치(수령대,메뉴판)

● 모니터, 스피커, 프린터 등

● 컴퓨터는 출력 장치들을 통해 사용자에게 명령이나 데이터를 입력 할 수 있는 화면을 보여주거나
명령에 대한 처리를 보여주거나 들러줍니다

2. CPU (요리사)

2-1 CPU의 구성 / 사람과 비유

1. 우뇌(연산력) = 산술 논리 연산장치 ALU (Arthmetic Logic Unit)
● 논리 연산 수행 
● 디지털 회로

2. 좌뇌(구성력) = 제어부와 내부버스 CU (Control Unit)
● 명령어 실행하는 순서 제어 / 스케쥴링
#제어부 
● 주기억 장치에 저장된 명령어 순서대로 호출,해독
● 제어 신호 발생시켜 컴퓨터 각 장치 동작유도 
#내부버스
● 기억, 연산, 제어 기능을 실현하기위해
CPU / 주기억 장치 / 입출력 장치 / 외부 기억 장치 / 주변 장치 / 통신 처리 장치
사이를 연결하는 버스


3. 오른손  (레지스터) = 레지스터 처리할 명령어 저장(도구를 드는손 메인)

레지스터란?
● 고속 메모리
● 프로세서에 위치
● 극소량의 데이터, 처리 중인 중간 결과와도 같은 프로세서가 바로
사용 할 수있는 데이터를 담고있는 영역
● 컴퓨터구조에 따라 크기,종류 다양함
● 용도에 따라 범용 레지스터 특수목적 레지스터로 구분됨
#범용 레지스터 : 연산 시 필요한 데이터,연산결과 임시 저장
#특수 목적 레지스터 : 특별한 용도로 사용 

목적에 따른 레지스터 종류
● 메모리 주소 레지스터(MAR) : 읽고 쓰기 위한 주기억 장치의 주소를 저장한다.
● 프로그램 카운터(PC) : 다음에 수행할 명령어의 주소를 저장.
● 명령어 레지스터(IR) : 현재 실행 중인 명령어를 저장
● 메모리 버퍼 레지스터(MBR) : 주기억장치에서 읽어온 데이터나 
                              저장할 데이터를 임시로 저장
● 누산기(AC,ACCUMULATEOR) : 연산 결과를 임시로 저장



4. 왼손  (캐시,메모리) = 캐시 메모리 처리속도를 높여준다(왼손은 거들뿐)

2-2 CPU의 동작
0. 컴퓨터는 모든 데이터를 기계어(0,1)로 저장
0. 기계어를 모스부호처럼 하드웨어적으로 CPU가 알아볼 수 있게 변환한게 "어셈블리어"
0. "어셈블리어"를 사람이 알아볼 수 있게 소프트웨어적으로 변환한게 "프로그래밍언어"

기계어(저장 공간) -> 어셈블리어(CPU) -> 프로그래밍 언어(사람)
※우리가 다룰 데이터(재료)와 명령어(레시피)는 모두 저장공간에 저장되어 있음

1. CPU가 명령어를 읽고 수행하는 동작
1-1 명령어 인출 : CU가 이번에 수행할 명령어 정보를 가져옴 / 주문정보,레시피 가져옴
1-2 명령어 해독 : 보통 opcode라고하는 명령어 코드를 인출하고
                     opcode 성격에 맞게   레지스터 준비  / 레시피에 맞게 요리도구 준비
1-3 실행        : 해독된 명령어 수행 
        ex) 산술/논리 관련 연산이라고 하면 ALU가 주체로 실행 / 요리 진행
1-4 반영        : 이 명령어의 수행결과를 반영, 수행 한사이클 끝 / 수령대로 전달


2-3 CPU의 성능 
1. 클럭
1-1 CPU내부에서 일정한 주파수를 가지는 신호, 이 신호로 모든 명령어 동작
1-2 1Hz(헤르츠)1초에 1번, 킬로(Khz)1024번, 메가(1024MHz)100만번, 기가(1024Ghz)10억번
1-3 클럭 주파수 빠를 시 : 제한된 시간에 / 더많은 명령 처리 가능

2. 코어
2-1 중앙처리 장치 역할을 하는 블록
2-2 즉, 싱글코어 = 요리사 한명, 멀티코어 = 요리사1<n명 많은 연산 빠른 병렬 처리 가능
2-3 CPU만으로 전체 성능 결정은 X (메모리도 중요) 하지만 가장 중요한 부분인건 불변 

3.메모리
# 명령에 대한 모든 연산 = 결국 메모리에서 처리(재료들 둘 공간)
메모리 4단계
                 [레지스터(CPU)]           CPU
              [    캐시(SRAM)    ]         주 기억 장치
            [   메인 메모리(DRAM)   ]      주 기억 장치 
          [     하드 디스크(HDD)      ]    보조 기억 장치
3-1 캐시메모리 (조리대)
1. 컴퓨터 꺼지면 초기화
2. 제일 빠르게 조회할 수 있는 저장공간
#컴퓨터 시스템 향상을 위해 CPU와 주기억장치 사이에 있는 아주 작은 비싼 메모리

[CPU에 있는 캐시메모리랑 다름
CPU구성것은 L1
메모리구성것 L2, L3]

L2,L3 VS CPU레지스터 비교
L2,L3 : 메인 메모리에 있는 데이터를 불러와 CPU가 필요한 데이터를 캐시에서 먼저 찾도록 함
# CPU와 별도 공간
# 메인 메모리와 CPU간의 속도차이 극복하기 위한것
# CPU레지스터는 CPU안에서 연산처리 하기 위해 데이터 저장하는 공간

3-2 주 기억장치 (선반 공간) = 메인 메모리 = RAM 같은말
# 주 기억장치 또한 컴퓨터 꺼지면 초기화 / 저장 원할 시 데이터를 하드디시크에 저장해야함
# 캐시 메모리보단 느리지만 빠르게 조회가능

1. RAM은 Random Access Memory의 약자
2. RAM은 DRAM과 SRAM이 있는데 주기억장치는 주로 DRAM을 의미(SRAM은 캐시,레지스트리)
3. CPU가 현재 처리중인 데이터,명령만을 일시적으로 저장하는 휘발성 메모리
4. 보조기억장치(하드디스크)보다 접근 속도 월등히 빠름
5. 모든 프로그램은 컴퓨터에서 실행되기 위해 메모리의 일부를 사용함
6. HDD - RAM - CPU와 유사한 방식으로 연산과정 중간에 위치

SRAM과 DRAM

※ SRAM / Static RAM
1. 정적 메모리
2. 전원 공급 기간 동안은 기록된 내용이 유지됨 / 재충전 필요 없음
3. 접근 속도 빠름 / 가격 비쌈 / (캐시메모리, 레지스터)

※DRAM Dynamic RAM
1. 동적 메모리
2. 전원 공급 기간에도 주기적으로 재충전 해줘야 기억 유지 가능
3. 주로 대용량의 기억장치에서 사용
4. 주로 RAM이라고 표현하는것은 거의 DRAM을 가리킴

3-3 보조 기억장치(HDD 하드디스크) 창고
# 전원이 꺼져도 지워지지 않는 저장공간 / 비 휘발성 메모리
1. 데이터와 프로그램 반영구적 저장

4. CPU와 메모리 콜라보

4-1 CPU와 메모리의 동작 콜라보

1. 입력장치에서 받은 데이터 
OR 보조기억장치에 저장된 프로그램을 (주문)
주 기억장치가 읽어옴 

(요리사가 
주문표를 선반에 걸어두고
창고에서 
필요한 레시피,
재료를 
선반으로 가져옴)

2. CPU가 
RAM에 저장해놨던 
처리해야 할 입력데이터에 
지정된 프로그램 명령어와
데이터들을 읽어와 처리하고 
결과를 다시 주기억 장치에 저장한다.

(요리사는 
선반에 걸어놨던 
주문표에 따라 
레시피와 
재료를 가지고 
우뇌를 통해 연산,
오른손으로 도구를 이용해
요리를 만들어 
선반에 올려놓습니다.)

3.주기억장치는 
처리 결과를 
출력장치 보내서 
출력 시키거나, 
보조기억장치에 저장한다.

(선반에 올려놓은 
요리는 수령대로 가져다주거나, 
미리 손질한 요리재료라면 
창고에 다시 넣습니다.)

4.CPU내의 제어장치(CU)가
 1~3번 과정에서 
 명령어가 순서대로 
 실행되도록 
 각 장치들을 제어한다

(요리사의 
좌뇌가 1~3번 
과정에서 
주문순서, 
레시피 순서에 
따라 요리를 하도록 
양손을 제어합니다.)



